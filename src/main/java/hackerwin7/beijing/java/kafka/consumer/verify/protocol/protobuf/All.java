// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hackerwin7/beijing/java/kafka/consumer/verify/protocol/protobuf/all.proto

package hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf;

public final class All {
  private All() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface sub_msgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required uint32 type = 1;</code>
     */
    int getType();

    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> 
        getFieldList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index);
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    int getFieldCount();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
        getFieldOrBuilderList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg}
   */
  public static final class sub_msg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg)
      sub_msgOrBuilder {
    // Use sub_msg.newBuilder() to construct.
    private sub_msg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private sub_msg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final sub_msg defaultInstance;
    public static sub_msg getDefaultInstance() {
      return defaultInstance;
    }

    public sub_msg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private sub_msg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                field_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair>();
                mutable_bitField0_ |= 0x00000002;
              }
              field_.add(input.readMessage(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          field_ = java.util.Collections.unmodifiableList(field_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder.class);
    }

    public static com.google.protobuf.Parser<sub_msg> PARSER =
        new com.google.protobuf.AbstractParser<sub_msg>() {
      public sub_msg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new sub_msg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<sub_msg> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg.MsgType}
     */
    public enum MsgType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PV = 0;</code>
       */
      PV(0, 0),
      /**
       * <code>PERFORM = 1;</code>
       */
      PERFORM(1, 1),
      /**
       * <code>CLICK = 2;</code>
       */
      CLICK(2, 2),
      /**
       * <code>ORDER = 3;</code>
       */
      ORDER(3, 3),
      ;

      /**
       * <code>PV = 0;</code>
       */
      public static final int PV_VALUE = 0;
      /**
       * <code>PERFORM = 1;</code>
       */
      public static final int PERFORM_VALUE = 1;
      /**
       * <code>CLICK = 2;</code>
       */
      public static final int CLICK_VALUE = 2;
      /**
       * <code>ORDER = 3;</code>
       */
      public static final int ORDER_VALUE = 3;


      public final int getNumber() { return value; }

      public static MsgType valueOf(int value) {
        switch (value) {
          case 0: return PV;
          case 1: return PERFORM;
          case 2: return CLICK;
          case 3: return ORDER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MsgType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MsgType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {
              public MsgType findValueByNumber(int number) {
                return MsgType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.getDescriptor().getEnumTypes().get(0);
      }

      private static final MsgType[] VALUES = values();

      public static MsgType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MsgType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg.MsgType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required uint32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int FIELD_FIELD_NUMBER = 2;
    private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> field_;
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> getFieldList() {
      return field_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
        getFieldOrBuilderList() {
      return field_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    public int getFieldCount() {
      return field_.size();
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index) {
      return field_.get(index);
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
        int index) {
      return field_.get(index);
    }

    private void initFields() {
      type_ = 0;
      field_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldCount(); i++) {
        if (!getField(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, type_);
      }
      for (int i = 0; i < field_.size(); i++) {
        output.writeMessage(2, field_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      for (int i = 0; i < field_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, field_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg)
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder.class);
      }

      // Construct using hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fieldBuilder_ == null) {
          field_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fieldBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_descriptor;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg getDefaultInstanceForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.getDefaultInstance();
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg build() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg buildPartial() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg result = new hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (fieldBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            field_ = java.util.Collections.unmodifiableList(field_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg) {
          return mergeFrom((hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg other) {
        if (other == hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (fieldBuilder_ == null) {
          if (!other.field_.isEmpty()) {
            if (field_.isEmpty()) {
              field_ = other.field_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFieldIsMutable();
              field_.addAll(other.field_);
            }
            onChanged();
          }
        } else {
          if (!other.field_.isEmpty()) {
            if (fieldBuilder_.isEmpty()) {
              fieldBuilder_.dispose();
              fieldBuilder_ = null;
              field_ = other.field_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fieldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldFieldBuilder() : null;
            } else {
              fieldBuilder_.addAllMessages(other.field_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getFieldCount(); i++) {
          if (!getField(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>required uint32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required uint32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> field_ =
        java.util.Collections.emptyList();
      private void ensureFieldIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          field_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair>(field_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> fieldBuilder_;

      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> getFieldList() {
        if (fieldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(field_);
        } else {
          return fieldBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public int getFieldCount() {
        if (fieldBuilder_ == null) {
          return field_.size();
        } else {
          return fieldBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index) {
        if (fieldBuilder_ == null) {
          return field_.get(index);
        } else {
          return fieldBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder setField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.set(index, value);
          onChanged();
        } else {
          fieldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder setField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder addField(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.add(value);
          onChanged();
        } else {
          fieldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder addField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.add(index, value);
          onChanged();
        } else {
          fieldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder addField(
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.add(builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder addField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder addAllField(
          java.lang.Iterable<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> values) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, field_);
          onChanged();
        } else {
          fieldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public Builder removeField(int index) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.remove(index);
          onChanged();
        } else {
          fieldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder getFieldBuilder(
          int index) {
        return getFieldFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
          int index) {
        if (fieldBuilder_ == null) {
          return field_.get(index);  } else {
          return fieldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
           getFieldOrBuilderList() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(field_);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder addFieldBuilder() {
        return getFieldFieldBuilder().addBuilder(
            hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder addFieldBuilder(
          int index) {
        return getFieldFieldBuilder().addBuilder(
            index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 2;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder> 
           getFieldBuilderList() {
        return getFieldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder>(
                  field_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg)
    }

    static {
      defaultInstance = new sub_msg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg)
  }

  public interface all_msgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.all_msg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> 
        getFieldList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index);
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    int getFieldCount();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
        getFieldOrBuilderList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
        int index);

    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg> 
        getDataList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg getData(int index);
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.all_msg}
   */
  public static final class all_msg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.all_msg)
      all_msgOrBuilder {
    // Use all_msg.newBuilder() to construct.
    private all_msg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private all_msg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final all_msg defaultInstance;
    public static all_msg getDefaultInstance() {
      return defaultInstance;
    }

    public all_msg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private all_msg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                field_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair>();
                mutable_bitField0_ |= 0x00000001;
              }
              field_.add(input.readMessage(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                data_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg>();
                mutable_bitField0_ |= 0x00000002;
              }
              data_.add(input.readMessage(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          field_ = java.util.Collections.unmodifiableList(field_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg.Builder.class);
    }

    public static com.google.protobuf.Parser<all_msg> PARSER =
        new com.google.protobuf.AbstractParser<all_msg>() {
      public all_msg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new all_msg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<all_msg> getParserForType() {
      return PARSER;
    }

    public static final int FIELD_FIELD_NUMBER = 1;
    private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> field_;
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> getFieldList() {
      return field_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
        getFieldOrBuilderList() {
      return field_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public int getFieldCount() {
      return field_.size();
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index) {
      return field_.get(index);
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
        int index) {
      return field_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg> data_;
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private void initFields() {
      field_ = java.util.Collections.emptyList();
      data_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldCount(); i++) {
        if (!getField(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDataCount(); i++) {
        if (!getData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < field_.size(); i++) {
        output.writeMessage(1, field_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(2, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < field_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, field_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.all_msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.all_msg)
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg.Builder.class);
      }

      // Construct using hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldFieldBuilder();
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldBuilder_.clear();
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_descriptor;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg getDefaultInstanceForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg.getDefaultInstance();
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg build() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg buildPartial() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg result = new hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg(this);
        int from_bitField0_ = bitField0_;
        if (fieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            field_ = java.util.Collections.unmodifiableList(field_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg) {
          return mergeFrom((hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg other) {
        if (other == hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg.getDefaultInstance()) return this;
        if (fieldBuilder_ == null) {
          if (!other.field_.isEmpty()) {
            if (field_.isEmpty()) {
              field_ = other.field_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldIsMutable();
              field_.addAll(other.field_);
            }
            onChanged();
          }
        } else {
          if (!other.field_.isEmpty()) {
            if (fieldBuilder_.isEmpty()) {
              fieldBuilder_.dispose();
              fieldBuilder_ = null;
              field_ = other.field_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldFieldBuilder() : null;
            } else {
              fieldBuilder_.addAllMessages(other.field_);
            }
          }
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldCount(); i++) {
          if (!getField(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDataCount(); i++) {
          if (!getData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.all_msg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> field_ =
        java.util.Collections.emptyList();
      private void ensureFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          field_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair>(field_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> fieldBuilder_;

      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> getFieldList() {
        if (fieldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(field_);
        } else {
          return fieldBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public int getFieldCount() {
        if (fieldBuilder_ == null) {
          return field_.size();
        } else {
          return fieldBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index) {
        if (fieldBuilder_ == null) {
          return field_.get(index);
        } else {
          return fieldBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder setField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.set(index, value);
          onChanged();
        } else {
          fieldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder setField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.add(value);
          onChanged();
        } else {
          fieldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.add(index, value);
          onChanged();
        } else {
          fieldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.add(builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addAllField(
          java.lang.Iterable<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> values) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, field_);
          onChanged();
        } else {
          fieldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder removeField(int index) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.remove(index);
          onChanged();
        } else {
          fieldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder getFieldBuilder(
          int index) {
        return getFieldFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
          int index) {
        if (fieldBuilder_ == null) {
          return field_.get(index);  } else {
          return fieldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
           getFieldOrBuilderList() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(field_);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder addFieldBuilder() {
        return getFieldFieldBuilder().addBuilder(
            hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder addFieldBuilder(
          int index) {
        return getFieldFieldBuilder().addBuilder(
            index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder> 
           getFieldBuilderList() {
        return getFieldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder>(
                  field_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg>(data_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder> dataBuilder_;

      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder setData(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder setData(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder addData(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder addData(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder addData(
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder addData(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.sub_msg data = 2;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msg.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.All.sub_msgOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.all_msg)
    }

    static {
      defaultInstance = new all_msg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.all_msg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nIhackerwin7/beijing/java/kafka/consumer" +
      "/verify/protocol/protobuf/all.proto\022?hac" +
      "kerwin7.beijing.java.kafka.consumer.veri" +
      "fy.protocol.protobuf\032Lhackerwin7/beijing" +
      "/java/kafka/consumer/verify/protocol/pro" +
      "tobuf/common.proto\"\243\001\n\007sub_msg\022\014\n\004type\030\001" +
      " \002(\r\022T\n\005field\030\002 \003(\0132E.hackerwin7.beijing" +
      ".java.kafka.consumer.verify.protocol.pro" +
      "tobuf.pair\"4\n\007MsgType\022\006\n\002PV\020\000\022\013\n\007PERFORM" +
      "\020\001\022\t\n\005CLICK\020\002\022\t\n\005ORDER\020\003\"\267\001\n\007all_msg\022T\n\005",
      "field\030\001 \003(\0132E.hackerwin7.beijing.java.ka" +
      "fka.consumer.verify.protocol.protobuf.pa" +
      "ir\022V\n\004data\030\002 \003(\0132H.hackerwin7.beijing.ja" +
      "va.kafka.consumer.verify.protocol.protob" +
      "uf.sub_msg"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.getDescriptor(),
        }, assigner);
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_sub_msg_descriptor,
        new java.lang.String[] { "Type", "Field", });
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_all_msg_descriptor,
        new java.lang.String[] { "Field", "Data", });
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
