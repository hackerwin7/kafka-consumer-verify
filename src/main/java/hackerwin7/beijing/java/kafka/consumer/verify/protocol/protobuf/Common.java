// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hackerwin7/beijing/java/kafka/consumer/verify/protocol/protobuf/common.proto

package hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface pairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>required string val = 2;</code>
     */
    boolean hasVal();
    /**
     * <code>required string val = 2;</code>
     */
    java.lang.String getVal();
    /**
     * <code>required string val = 2;</code>
     */
    com.google.protobuf.ByteString
        getValBytes();
  }
  /**
   * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair}
   */
  public static final class pair extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair)
      pairOrBuilder {
    // Use pair.newBuilder() to construct.
    private pair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private pair(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final pair defaultInstance;
    public static pair getDefaultInstance() {
      return defaultInstance;
    }

    public pair getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private pair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              key_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              val_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder.class);
    }

    public static com.google.protobuf.Parser<pair> PARSER =
        new com.google.protobuf.AbstractParser<pair>() {
      public pair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new pair(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<pair> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>required string key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VAL_FIELD_NUMBER = 2;
    private java.lang.Object val_;
    /**
     * <code>required string val = 2;</code>
     */
    public boolean hasVal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string val = 2;</code>
     */
    public java.lang.String getVal() {
      java.lang.Object ref = val_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          val_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string val = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValBytes() {
      java.lang.Object ref = val_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        val_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = "";
      val_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair)
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder.class);
      }

      // Construct using hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        val_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_descriptor;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getDefaultInstanceForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance();
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair build() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair buildPartial() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair result = new hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.val_ = val_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair) {
          return mergeFrom((hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair other) {
        if (other == hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasVal()) {
          bitField0_ |= 0x00000002;
          val_ = other.val_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object val_ = "";
      /**
       * <code>required string val = 2;</code>
       */
      public boolean hasVal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string val = 2;</code>
       */
      public java.lang.String getVal() {
        java.lang.Object ref = val_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            val_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string val = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValBytes() {
        java.lang.Object ref = val_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          val_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string val = 2;</code>
       */
      public Builder setVal(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string val = 2;</code>
       */
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = getDefaultInstance().getVal();
        onChanged();
        return this;
      }
      /**
       * <code>required string val = 2;</code>
       */
      public Builder setValBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        val_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair)
    }

    static {
      defaultInstance = new pair(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair)
  }

  public interface pairsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pairs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> 
        getFieldList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index);
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    int getFieldCount();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
        getFieldOrBuilderList();
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pairs}
   */
  public static final class pairs extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pairs)
      pairsOrBuilder {
    // Use pairs.newBuilder() to construct.
    private pairs(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private pairs(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final pairs defaultInstance;
    public static pairs getDefaultInstance() {
      return defaultInstance;
    }

    public pairs getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private pairs(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                field_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair>();
                mutable_bitField0_ |= 0x00000001;
              }
              field_.add(input.readMessage(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          field_ = java.util.Collections.unmodifiableList(field_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs.Builder.class);
    }

    public static com.google.protobuf.Parser<pairs> PARSER =
        new com.google.protobuf.AbstractParser<pairs>() {
      public pairs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new pairs(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<pairs> getParserForType() {
      return PARSER;
    }

    public static final int FIELD_FIELD_NUMBER = 1;
    private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> field_;
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> getFieldList() {
      return field_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
        getFieldOrBuilderList() {
      return field_;
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public int getFieldCount() {
      return field_.size();
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index) {
      return field_.get(index);
    }
    /**
     * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
     */
    public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
        int index) {
      return field_.get(index);
    }

    private void initFields() {
      field_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldCount(); i++) {
        if (!getField(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < field_.size(); i++) {
        output.writeMessage(1, field_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < field_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, field_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pairs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pairs)
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs.class, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs.Builder.class);
      }

      // Construct using hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_descriptor;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs getDefaultInstanceForType() {
        return hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs.getDefaultInstance();
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs build() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs buildPartial() {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs result = new hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs(this);
        int from_bitField0_ = bitField0_;
        if (fieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            field_ = java.util.Collections.unmodifiableList(field_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs) {
          return mergeFrom((hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs other) {
        if (other == hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs.getDefaultInstance()) return this;
        if (fieldBuilder_ == null) {
          if (!other.field_.isEmpty()) {
            if (field_.isEmpty()) {
              field_ = other.field_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldIsMutable();
              field_.addAll(other.field_);
            }
            onChanged();
          }
        } else {
          if (!other.field_.isEmpty()) {
            if (fieldBuilder_.isEmpty()) {
              fieldBuilder_.dispose();
              fieldBuilder_ = null;
              field_ = other.field_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldFieldBuilder() : null;
            } else {
              fieldBuilder_.addAllMessages(other.field_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldCount(); i++) {
          if (!getField(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairs) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> field_ =
        java.util.Collections.emptyList();
      private void ensureFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          field_ = new java.util.ArrayList<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair>(field_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> fieldBuilder_;

      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> getFieldList() {
        if (fieldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(field_);
        } else {
          return fieldBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public int getFieldCount() {
        if (fieldBuilder_ == null) {
          return field_.size();
        } else {
          return fieldBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair getField(int index) {
        if (fieldBuilder_ == null) {
          return field_.get(index);
        } else {
          return fieldBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder setField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.set(index, value);
          onChanged();
        } else {
          fieldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder setField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.add(value);
          onChanged();
        } else {
          fieldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldIsMutable();
          field_.add(index, value);
          onChanged();
        } else {
          fieldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.add(builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addField(
          int index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder addAllField(
          java.lang.Iterable<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair> values) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, field_);
          onChanged();
        } else {
          fieldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public Builder removeField(int index) {
        if (fieldBuilder_ == null) {
          ensureFieldIsMutable();
          field_.remove(index);
          onChanged();
        } else {
          fieldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder getFieldBuilder(
          int index) {
        return getFieldFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder getFieldOrBuilder(
          int index) {
        if (fieldBuilder_ == null) {
          return field_.get(index);  } else {
          return fieldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public java.util.List<? extends hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
           getFieldOrBuilderList() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(field_);
        }
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder addFieldBuilder() {
        return getFieldFieldBuilder().addBuilder(
            hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder addFieldBuilder(
          int index) {
        return getFieldFieldBuilder().addBuilder(
            index, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.getDefaultInstance());
      }
      /**
       * <code>repeated .hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pair field = 1;</code>
       */
      public java.util.List<hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder> 
           getFieldBuilderList() {
        return getFieldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pair.Builder, hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.Common.pairOrBuilder>(
                  field_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pairs)
    }

    static {
      defaultInstance = new pairs(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:hackerwin7.beijing.java.kafka.consumer.verify.protocol.protobuf.pairs)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nLhackerwin7/beijing/java/kafka/consumer" +
      "/verify/protocol/protobuf/common.proto\022?" +
      "hackerwin7.beijing.java.kafka.consumer.v" +
      "erify.protocol.protobuf\" \n\004pair\022\013\n\003key\030\001" +
      " \002(\t\022\013\n\003val\030\002 \002(\t\"]\n\005pairs\022T\n\005field\030\001 \003(" +
      "\0132E.hackerwin7.beijing.java.kafka.consum" +
      "er.verify.protocol.protobuf.pair"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pair_descriptor,
        new java.lang.String[] { "Key", "Val", });
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_hackerwin7_beijing_java_kafka_consumer_verify_protocol_protobuf_pairs_descriptor,
        new java.lang.String[] { "Field", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
